[user]

    useConfigOnly = true
    name = Martijn Gastkemper

[init]

    templatedir = ~/.dotfiles/git_template

    defaultBranch = main

[alias]

    # Debug git aliases (source: https://stackoverflow.com/a/39616600/2182703)
    debug  = "!set -x; GIT_TRACE=2 GIT_CURL_VERBOSE=2 GIT_TRACE_PERFORMANCE=2 GIT_TRACE_PACK_ACCESS=2 GIT_TRACE_PACKET=2 GIT_TRACE_PACKFILE=2 GIT_TRACE_SETUP=2 GIT_TRACE_SHALLOW=2 git"

    # Locally exclude file without adding it to .gitignore
    exclude = "!f() { \
      for file in "$@"; do \
        echo "$file" >> .git/info/exclude; \
      done; \
    }; f"

    # Create a feature branch
    feature = "!f() { \
      git checkout -b 'feature/'$(git firstname)'-'$1; \
    }; f"

    # Return lowercase first part of git user.name
    firstname = "! git config user.name | cut -d' ' -f1 | awk '{print tolower($0)}';"

    # Create a hotfix branch
    hotfix = "!f() { \
      [ $# -ne 2 ] && echo 'Two arguments required!' >&2 || git checkout -b "hotfix/$(git firstname)-$1" $2; \
    }; f"

    # Interactive rebase from local branch eg. git rbi master
    rbi = "! git rebase --interactive `git merge-base ${1:-origin/master} HEAD`"

    # List remote branches
    branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes

[rebase]

    autoSquash = true
    abbreviateCommands = true
    autoStash = true

[core]

    excludesfile = ~/.dotfiles/gitignore_global
    attributesfile = ~/.dotfiles/gitattributes

[branch]

    autosetupmerge = always

[commit]

    gpgsign = true
    verbose = true

[rerere]

    # Store how merge conflicts where resolved.
    enable = true

[merge "composer_json"]
    name = composer JSON file merge driver
    driver = composer-git-merge-driver %O %A %B %L %P
    recursive = binary
